<?xml version = "1.0" encoding = "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lifecode.mybatis.mapper.PostMapper">
	
	<sql id = "sqlPostFields">
			a.post_id
			,a.category_id
			,a.level
			,a.title
			,a.created_at
			,a.sumary
			,a.content
			,a.times_of_view
			,(SELECT COUNT(X.COMMENT_ID) FROM COMMENTS X WHERE X.POST_ID = A.POST_ID) AS number_of_comments
	</sql>
	
	<sql id="sqlPaginatorPosts">
		<choose>
			<when test="start_post !=null and start_post != '' and records_no != null and records_no != ''">
				LIMIT ${start_post},${records_no}
			</when>
			<when test="records_no != null and records_no != ''">
				LIMIT ${records_no}
			</when>
		</choose>
	</sql>

	<sql id="sqlWherePosts">
		<where>
			<if test="category_id != null and category_id != ''">
				AND B.CATEGORY_ID = #{category_id}
			</if>
			<if test="tag_id != null and tag_id != ''">
				AND C.TAG_ID = ${tag_id}
			</if>
			<include refid="sqlWhereTypePost"></include>
		</where>
	</sql>
	
	<sql id="sqlWhereTypePost">
		<choose>
			<when test="isDaft != null and isDaft != ''">
				AND A.LEVEL = 5
			</when>
			<otherwise>
				AND A.LEVEL &lt; 5
			</otherwise>
		</choose>
	</sql>

	<sql id="sqlSelectHotPosts">
		SELECT
			<include refid="sqlPostFields"></include>
		FROM POSTS A
		<include refid="sqlWherePosts"></include>
		ORDER BY A.LEVEL ASC, A.CREATED_AT ASC
		LIMIT 3
	</sql>
	
	<sql id="sqlSelectRecentPosts">
		SELECT
			<include refid="sqlPostFields"></include>
		FROM POSTS A
			WHERE
				A.POST_ID NOT IN (SELECT 
									T.POST_ID
								  FROM (
									  	SELECT
											<!-- <include refid="sqlPostFields"></include> -->
											B.POST_ID
										FROM POSTS B
									  	ORDER BY B.LEVEL ASC, B.CREATED_AT ASC
										LIMIT 3
									) T
								)
			<include refid="sqlWhereTypePost"></include>
			ORDER BY A.CREATED_AT ASC
			LIMIT 8
	</sql>

	<select id="selectPostsTotCnt" resultType="int">
		SELECT
			COUNT(*)
		FROM (
			SELECT
				A.POST_ID
			FROM POSTS A
			<if test="category_id != null and category_id != ''">
				LEFT JOIN CATEGORIES B ON A.CATEGORY_ID = B.CATEGORY_ID
			</if>
			<if test="tag_id != null and tag_id != ''">
				LEFT JOIN POSTS_TAGS C ON A.POST_ID = C.POST_ID
				LEFT JOIN TAGS D ON C.TAG_ID = D.TAG_ID
			</if>
			<include refid="sqlWherePosts"></include>
			GROUP BY A.POST_ID
		) X
	</select>
	
	<select id="selectPosts" resultType="PostVO">
		SELECT
			<include refid="sqlPostFields"></include>
		FROM POSTS A
		<if test="category_id != null and category_id != ''">
			LEFT JOIN CATEGORIES B ON A.CATEGORY_ID = B.CATEGORY_ID
		</if>
		<if test="tag_id != null and tag_id != ''">
			LEFT JOIN POSTS_TAGS C ON A.POST_ID = C.POST_ID
			LEFT JOIN TAGS D ON C.TAG_ID = D.TAG_ID
		</if>
		<include refid="sqlWherePosts"></include>
		GROUP BY A.POST_ID
		ORDER BY A.LEVEL ASC, A.CREATED_AT ASC
		<include refid="sqlPaginatorPosts"></include>
	</select>

	<select id="selectPopularPosts" resultType="PostVO">
		SELECT
			<include refid="sqlPostFields"></include>
		FROM POSTS A
			ORDER BY A.TIMES_OF_VIEW ASC
		LIMIT 4
	</select>
	
	<select id="selectHotPosts" resultType="PostVO">
		<include refid="sqlSelectHotPosts"></include>
	</select>
	
	<select id="selectRecentPosts" resultType="PostVO">
		<include refid="sqlSelectRecentPosts"></include>
	</select>
	
	<select id="selectOldPosts" resultType="PostVO">
		SELECT
			<include refid="sqlPostFields"></include>
		FROM POSTS A
		WHERE
			A.POST_ID NOT IN (
				SELECT T.POST_ID FROM
				(
					(<include refid="sqlSelectHotPosts"></include>)
					UNION
					(<include refid="sqlSelectRecentPosts"></include>)
				) T
			)
			<include refid="sqlWhereTypePost"></include>
		<include refid="sqlPaginatorPosts"></include>
	</select>
	
	<select id="getPostById" resultType="PostVO">
		SELECT
			<include refid="sqlPostFields"></include>
			,(SELECT COUNT(X.COMMENT_ID) FROM COMMENTS X WHERE X.POST_ID = A.POST_ID) AS number_of_comments
		FROM
			POSTS A
		WHERE
			A.POST_ID = #{post_id}
		GROUP BY A.POST_ID
	</select>
</mapper>